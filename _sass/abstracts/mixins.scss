// Mixins
// Mixins are one step more than variables. For instance you can use mxins to put in flexbox and it's browser prefixes,
// or consistant patterns like borders for particular components. Like variables, if you find yourself writing code over and over
// make it into a mixin.

//****************-------MEDIA QUERIES--------****************
// Breakpoints for CSS variables
// Used for the typography, spacing and the inputs

@mixin breakpoint($class) {
	@if $class==xs {
		@media (max-width: map-get($breakpoints, xs)) {
			@content;
		}
	} @else if $class==xsm {
		@media (max-width: map-get($breakpoints, xsm)) {
			@content;
		}
	} @else if $class==sm {
		@media (max-width: map-get($breakpoints, sm)) {
			@content;
		}
	} @else if $class==md {
		@media (max-width: map-get($breakpoints, md)) {
			@content;
		}
	} @else if $class==lg {
		@media (max-width: map-get($breakpoints, lg)) {
			@content;
		}
	} @else if $class==xl {
		@media (max-width: map-get($breakpoints, xl)) {
			@content;
		}
	} @else {
		@error "Breakpoint mixin supports: xs, xsm, sm, md, lg, xl";
	}
}

//query for ALL medias
@mixin media($keys...) {
	@each $key in $keys {
		@media (max-width: map-get($breakpoints, $key)) {
			@content;
		}
	}
}

//query for ALL medias
@mixin media-min($keys...) {
	@each $key in $keys {
		@media (min-width: map-get($breakpoints, $key)) {
			@content;
		}
	}
}

//****************-------END MEDIA QUERIES--------****************

//****************-------PSEUDO ELEMENTS MIXINS--------****************
@mixin pseudo($display: block, $pos: absolute, $content: "") {
	content: $content;
	display: $display;
	position: $pos;
}

//****************-------FONT RENDERING--------****************
// edit font rendering -> tip: use for light text on dark backgrounds
@mixin fontSmooth {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

//****************-------END FONT RENDERING--------***************

//****************-------BOX SHADOWS--------*****************

@mixin inner-box-shadow($horiz, $vert, $blur, $spread, $color) {
	-webkit-box-shadow: inset $horiz $vert $blur $spread $color;
	-moz-box-shadow: inset $horiz $vert $blur $spread $color;
	box-shadow: inset $horiz $vert $blur $spread $color;
}

//****************-------END BOX SHADOWS--------*****************

//****************-------SHAPES--------*****************

//****************-------END TEXTFIELD--------*****************

//****************-------common layout--------*****************

@mixin states {
	&:hover,
	&:focus,
	&:active {
		@content;
	}
}
