/*
Types: Text, solid or outline
Colours: Primary, Secondary, Subtle or Accent
Size: Inline, Standard and Massive
States: Disabled, Hover, Focus and Active
Additions: Button groups and icons
*/

$all-button-selectors: '.btn, button, .button, [type="button"], [role="button"]';
$btn-border-width: $standard-border-width;

// --------------------------------------
// ---------- DISABLED BUTTONS ----------
// --------------------------------------
a {
	&:hover,
	&:active,
	&:focus {
		@include transform-timing($animation-time);
	}

	&:visited {
		color: $color-primary;
	}
}

#{$all-button-selectors} {
	&:focus {
		outline: none;
	}
}

// --------------------------------------
// ---------- STANDARD BUTTONS ----------
// --------------------------------------

@mixin standard-button {
	// Text sizes and line height are set in the set-button-size mixin
	font-family: $body-font-family;
	font-weight: $text-regular;
	white-space: nowrap;
	text-decoration: none;
	text-align: center;
	cursor: pointer;
	@include fontSmooth;
	border-width: $btn-border-width;
	border-style: solid;
	grid-template-areas: "text arrow";
}

#{$all-button-selectors} {
	@include standard-button;
	padding: 0.5rem 1rem;
	font-weight: 400;
}
.btn-text {
	font-weight: 400 !important;
	display: flex;
	align-items: center;
	background-color: transparent;
	font-weight: 600;
	display: flex;
	align-items: center;
	color: $white;
	opacity: 0.5;
	@include transform-timing(1s);
	&:hover {
		opacity: 1;
	}
	&:active {
		opacity: 1;
	}
}
a#{$all-button-selectors} {
	display: inline-block;
	font-weight: 400;
}

// --------------------------------------
// ---------- RESPONSIVE ----------
// --------------------------------------

//Making standard buttons to icon button at specific breakpoint for smaller device to save space
@mixin responsive-button($breakpoint, $size: $btn-font-size) {
	@include breakpoint($breakpoint) {
		font-size: 0;
		padding: $space-xs;

		&:before,
		&:after {
			margin: 0;
			vertical-align: middle;
			font-size: $size;
		}
	}
}

//Assigning classname - Standard button will be an icon button at breakpoint depends on class name
//i.e. - .btn-icon-responsive-sm : will be icon button at breakpoint sm
$btn-brerakpoints: xs, xsm, sm, md, lg, xl;

@each $breakpoint in $btn-brerakpoints {
	.btn-icon-responsive-#{$breakpoint} {
		@include responsive-button(#{$breakpoint});
	}
}
